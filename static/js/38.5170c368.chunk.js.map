{"version":3,"file":"static/js/38.5170c368.chunk.js","mappings":"2QAMMA,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,+CACPF,SAAS,cAGC,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UAQrB,OANAC,EAAAA,EAAAA,YAAU,WACJD,GACFJ,EAAS,eAEV,CAACI,EAAWJ,KAGb,gBAAKM,UAAU,4BAAf,UACE,iBAAKA,UAAU,+BAAf,WACE,gBACEA,UAAU,oCACVC,MAAO,CACLC,gBACE,uKAJN,UAOE,gBAAKF,UAAU,2DAAf,UACE,4BACE,eAAIA,UAAU,gCAAd,mCAIA,cAAGA,UAAU,8BAAb,kEAON,gBAAKA,UAAU,0DAAf,UACE,iBAAKA,UAAU,SAAf,WACE,iBAAKA,UAAU,cAAf,WACE,eAAIA,UAAU,+DAAd,mCAIA,cAAGA,UAAU,wCAAb,gDAKF,iBAAKA,UAAU,OAAf,WACE,SAAC,KAAD,CACEG,cAAe,CACbd,MAAO,GACPE,SAAU,IAEZa,iBAAkBlB,EAClBmB,SAAU,SAAAC,GACR,IAAQjB,EAAoBiB,EAApBjB,MAAOE,EAAae,EAAbf,SACfM,EAAW,CAAER,MAAAA,EAAOE,SAAAA,KARxB,SAWG,gBAAGgB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAAC,KAAD,YACE,4BACE,kBACEC,QAAQ,QACRT,UAAU,sDAFZ,4BAMA,SAAC,KAAD,CACEU,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,YAAY,sBACZC,WAAS,EACTd,UAAU,0TAEXO,EAAOlB,OAASmB,EAAQnB,OACvB,gBAAKW,UAAU,oDAAf,SACGO,EAAOlB,QAER,SAEN,iBAAKW,UAAU,OAAf,WACE,gBAAKA,UAAU,4BAAf,UACE,kBACES,QAAQ,WACRT,UAAU,2CAFZ,yBAOF,SAAC,KAAD,CACEY,KAAK,WACLD,KAAK,WACLD,GAAG,WACHG,YAAY,gBACZb,UAAU,0TAEXO,EAAOhB,UAAYiB,EAAQjB,UAC1B,gBAAKS,UAAU,oDAAf,SACGO,EAAOhB,WAER,SAGN,gBAAKS,UAAU,OAAf,UACE,mBACEY,KAAK,SACLZ,UAAU,wNAFZ,8BAWR,eAAGA,UAAU,yCAAb,uCACkC,KAChC,SAAC,KAAD,CACEe,GAAG,YACHf,UAAU,mEAFZ,qBAFF","sources":["pages/Login.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useSignInUserMutation } from '../redux';\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(6, 'Password must contain 7 or more characters!')\n    .required('Required'),\n});\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const [signInUser, { isSuccess }] = useSignInUserMutation();\n\n  useEffect(() => {\n    if (isSuccess) {\n      navigate('/contacts');\n    }\n  }, [isSuccess, navigate]);\n\n  return (\n    <div className=\"bg-white dark:bg-gray-900\">\n      <div className=\"flex justify-center h-screen\">\n        <div\n          className=\"hidden bg-cover lg:block lg:w-2/3\"\n          style={{\n            backgroundImage:\n              'url(https://images.unsplash.com/photo-1616763355603-9755a640a287?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80)',\n          }}\n        >\n          <div className=\"flex items-center h-full px-20 bg-gray-900 bg-opacity-40\">\n            <div>\n              <h2 className=\"text-4xl font-bold text-white\">\n                Your cloud phonebook\n              </h2>\n\n              <p className=\"max-w-xl mt-3 text-gray-300\">\n                Store and edit all your contatacts in cloud!\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center w-full max-w-md px-6 mx-auto lg:w-2/6\">\n          <div className=\"flex-1\">\n            <div className=\"text-center\">\n              <h2 className=\"text-4xl font-bold text-center text-gray-700 dark:text-white\">\n                Your cloud phonebook\n              </h2>\n\n              <p className=\"mt-3 text-gray-500 dark:text-gray-300\">\n                Sign in to access your account\n              </p>\n            </div>\n\n            <div className=\"mt-8\">\n              <Formik\n                initialValues={{\n                  email: '',\n                  password: '',\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={values => {\n                  const { email, password } = values;\n                  signInUser({ email, password });\n                }}\n              >\n                {({ errors, touched }) => (\n                  <Form>\n                    <div>\n                      <label\n                        htmlFor=\"email\"\n                        className=\"block mb-2 text-sm text-gray-600 dark:text-gray-200\"\n                      >\n                        Email Address\n                      </label>\n                      <Field\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"example@example.com\"\n                        autoFocus\n                        className=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\"\n                      />\n                      {errors.email && touched.email ? (\n                        <div className=\"block mb-2 text-sm text-red-600 dark:text-red-200\">\n                          {errors.email}\n                        </div>\n                      ) : null}\n                    </div>\n                    <div className=\"mt-6\">\n                      <div className=\"flex justify-between mb-2\">\n                        <label\n                          htmlFor=\"password\"\n                          className=\"text-sm text-gray-600 dark:text-gray-200\"\n                        >\n                          Password\n                        </label>\n                      </div>\n                      <Field\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"Your Password\"\n                        className=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\"\n                      />\n                      {errors.password && touched.password ? (\n                        <div className=\"block mb-2 text-sm text-red-600 dark:text-red-200\">\n                          {errors.password}\n                        </div>\n                      ) : null}\n                    </div>\n\n                    <div className=\"mt-6\">\n                      <button\n                        type=\"submit\"\n                        className=\"w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-500 rounded-md hover:bg-blue-400 focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50\"\n                      >\n                        Sign in\n                      </button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n\n              <p className=\"mt-6 text-sm text-center text-gray-400\">\n                Don&#x27;t have an account yet?{' '}\n                <NavLink\n                  to=\"/register\"\n                  className=\"text-blue-500 focus:outline-none focus:underline hover:underline\"\n                >\n                  Sign up\n                </NavLink>\n                .\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["SignupSchema","Yup","shape","email","required","password","min","Login","navigate","useNavigate","useSignInUserMutation","signInUser","isSuccess","useEffect","className","style","backgroundImage","initialValues","validationSchema","onSubmit","values","errors","touched","htmlFor","id","name","type","placeholder","autoFocus","to"],"sourceRoot":""}